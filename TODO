----------------------------
Thu Feb 22 01:35:09 CET 2018

Need to increase test coverage.

----------------------------
Mon Feb 19 00:47:12 CET 2018

Good progress on help, but ugly reference to CLI object
being passed around.

Probably better to use a "parent" attribute that points to the parent
CommandSet.

This requires a trigger to set the parent when a command is added to
another command set. Easy to do for an "add_command" method, difficult
for the constructor (I guess).

Once settled, the "cli_object" can be implemented by walking up the
parents until you hit an $obj->isa('Term::CLI').

Also, remove the restriction on mutual exclusivity of arguments and
sub-commands: when syntax checking or completing, always check arguments
before sub-commands, and insist on fixed number of arguments except on the
last argument.

Actually, by implementing a trigger when adding a command, we can perform this
sanity check as well, and croak() if it fails.

Same thing for adding arguments, then...

Oh, but that defeats the "debug" trick... :-(

----------------------------
Sat Feb 17 22:08:03 CET 2018


"help" -> list of commands, short usage, and top-level description:

file {cp|mv|info}      File operations.
sleep <time>           Sleep for <time> seconds.

"help file" -> list of file commands:

file cp <src> <dst>    Copy <src> to <dst>.
file mv <src> <dst>    Move <src> to <dst>.
file info <path>       Show information on <path>.

If we use the chaining get_help() calls, the "file" command object needs to
know whether it is called as part of "help" or "help file".

If it is called as the "leaf" of the "help" command line, then we should show
more information.

Say, we have "info":

 * usage: file info <path>
 * summary: Show information on <path>.
 * description:
    The "file info" command takes a path name as its parameter
    and shows information such as: permissions, file type,
    size, modification times, and ownership.

---------------------------------------------------------------------
cli> help

file {cp|mv|info}      File operations.
sleep <time>           Sleep for <time> seconds.

---------------------------------------------------------------------
cli> help file

  file [--debug] {cp|mv|info}
  file [-d] {cp|mv|info}

Perform various file operations.

Sub-commands:

  file cp <src> <dst>    Copy <src> to <dst>.
  file mv <src> <dst>    Move <src> to <dst>.
  file info <path>       Show information on <path>.

---------------------------------------------------------------------
cli> help file info

  file [--debug] info [--verbose] <path>
  file [-d] info [-v] <path>

The "file info" command takes a path name as its parameter
and shows information such as: permissions, file type,
size, modification times, and ownership.

---------------------------------------------------------------------
Thu Feb  8 10:52:29 CET 2018

Need to build in "help":

 * Cleanup help stuff.
 * The chained "execute" and "get_help" calls should pass around
   a copy of command_path and arguments in the %args.
 * CLI's _get_help should collect all "usage" lines along with the
   descriptions, then decide the "indent" based on that.
 * Need to figure out the "--pod" option to help.
 * Need to figure out how to do help completion!
